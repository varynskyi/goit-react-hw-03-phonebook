{"version":3,"sources":["components/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","change","event","currentTarget","value","setState","formSubmit","preventDefault","newState","id","uuidv4","props","contacts","filter","className","s","container","onSubmit","this","label","input","type","onChange","pattern","title","required","button","Component","ContactList","getContacts","deleteContact","map","elem","item","btn","onClick","Filter","App","element","target","find","contact","toast","error","prevState","inputN","toLowerCase","includes","localStorage","getItem","parsed","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e8e10ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__19ODB\",\"title\":\"App_title__2iSuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1FsH8\",\"label\":\"ContactForm_label__2yutw\",\"input\":\"ContactForm_input__cW-dB\",\"button\":\"ContactForm_button__2H7io\"};","import React from \"react\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  change = (event) => {\n    const { name, number, value } = event.currentTarget;\n    this.setState({ [name]: value, [number]: value });\n  };\n\n  formSubmit = (event) => {\n    event.preventDefault();\n    let nameId = uuidv4();\n    const newState = {\n      id: nameId,\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.formSubmit(newState);\n    this.setState({\n      contacts: [],\n      filter: \"\",\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.container} onSubmit={this.formSubmit}>\n        <label className={s.label}>Name</label>\n        <input\n          className={s.input}\n          type=\"text\"\n          id=\"inputName\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.change}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label}>Number</label>\n        <input\n          className={s.input}\n          id=\"inputNumber\"\n          type=\"tel\"\n          name=\"number\"\n          value={this.state.number}\n          onChange={this.change}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  formSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ getContacts, deleteContact }) => {\n  return (\n    <div className={s.container}>\n      <ul>\n        {getContacts.map((elem) => (\n          <li key={elem.id} className={s.item}>\n            <span>\n              {elem.name}: {elem.number}\n            </span>\n            <button\n              className={s.btn}\n              type=\"submit\"\n              onClick={() => deleteContact(elem)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContacts: PropTypes.array.isRequired,\n  deleteeContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, change }) => {\n  return (\n    <div className={s.container}>\n      <p className={s.label}>Find contact</p>\n      <input\n        type=\"text\"\n        className={s.input}\n        name=\"filter\"\n        onChange={change}\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  change: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport s from \"./App.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Denzel Hayes Washington Jr\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Julia Roberts\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Jennifer Aniston\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Robert De Niro\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsed = JSON.parse(contacts);\n    if (parsed) {\n      this.setState({ contacts: parsed });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  change = (element) => {\n    this.setState({\n      filter: element.target.value,\n    });\n  };\n\n  formSubmit = (item) => {\n    const findContact = this.state.contacts.find(\n      (contact) => contact.name === item.name\n    );\n    !findContact\n      ? this.setState((prevState) => ({\n          contacts: [item, ...prevState.contacts],\n        }))\n      : toast.error(`${item.name} is already in contacts`);\n  };\n\n  getContacts = () => {\n    const inputN = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(inputN)\n    );\n  };\n\n  deleteContact = (item) => {\n    return this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== item.id),\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm formSubmit={this.formSubmit} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={this.state.filter} change={this.change} />\n        <ContactList\n          getContacts={this.getContacts()}\n          deleteContact={this.deleteContact}\n        />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2cfGM\",\"item\":\"ContactList_item__ARnfu\",\"btn\":\"ContactList_btn__2nujj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3SWGb\",\"label\":\"Filter_label__1hXC8\",\"input\":\"Filter_input__c91Ng\",\"btn\":\"Filter_btn__1K0Ge\"};"],"sourceRoot":""}